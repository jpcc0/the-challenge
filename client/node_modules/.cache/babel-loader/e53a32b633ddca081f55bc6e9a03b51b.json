{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaconley/projects/the-challenge/client/src/app.js\";\nimport React from 'react';\n// Components and pages would be in separate files\nimport Challenge from './components/Challenge';\nimport Leaderboard from './components/Leaderboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gamified Coding Challenges Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Challenge, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nconst PORT = process.env.PORT || 5001; // Choose a port other than 5000\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Challenge","Leaderboard","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","PORT","process","env","app","listen","console","log","$RefreshReg$"],"sources":["/Users/joshuaconley/projects/the-challenge/client/src/app.js"],"sourcesContent":["import React from 'react';\n// Components and pages would be in separate files\nimport Challenge from './components/Challenge';\nimport Leaderboard from './components/Leaderboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Gamified Coding Challenges Platform</h1>\n      {/* Other components would be included here as well */}\n      <Challenge />\n      <Leaderboard />\n    </div>\n  );\n}\nconst PORT = process.env.PORT || 5001; // Choose a port other than 5000\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBH,OAAA;MAAAG,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5CP,OAAA,CAACH,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbP,OAAA,CAACF,WAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACC,EAAA,GATQP,GAAG;AAUZ,MAAMQ,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI,CAAC,CAAC;AACvCG,GAAG,CAACC,MAAM,CAACJ,IAAI,EAAE,MAAM;EACrBK,OAAO,CAACC,GAAG,CAAE,6BAA4BN,IAAK,EAAC,CAAC;AAClD,CAAC,CAAC;AAEF,eAAeR,GAAG;AAAC,IAAAO,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module"}